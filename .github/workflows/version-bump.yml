name: Auto Version Bump

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  version-bump:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Determine bump type
      id: bump_type
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "type=${{ github.event.inputs.bump_type }}" >> $GITHUB_OUTPUT
        else
          # Auto-detect from commit messages
          COMMITS=$(git log --oneline $(git describe --tags --abbrev=0)..HEAD 2>/dev/null || git log --oneline)
          
          if echo "$COMMITS" | grep -i "BREAKING\|breaking change\|major:"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$COMMITS" | grep -i "feat\|feature\|minor:"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Bump version
      run: |
        uv version --bump ${{ steps.bump_type.outputs.type }}
        NEW_VERSION=$(uv version --short)
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
    
    - name: Commit version bump
      run: |
        git add pyproject.toml
        git commit -m "Bump version to $NEW_VERSION" || exit 0
        git tag "v$NEW_VERSION"
        git push origin master
        git push origin "v$NEW_VERSION"
